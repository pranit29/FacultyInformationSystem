// <auto-generated />
using System;
using FacultyInformationSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FacultyInformationSystem.Migrations
{
    [DbContext(typeof(FDBContext))]
    [Migration("20220727020748_AZURE")]
    partial class AZURE
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FacultyInformationSystem.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<string>("CourseCredits")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("DeptID");

                    b.HasKey("CourseId");

                    b.HasIndex("DeptId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.CourseSubject", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CourseSubject");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.CoursesTaught", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FacultyID");

                    b.Property<DateTime>("FirstDateTaught")
                        .HasColumnType("date");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.HasIndex("CourseId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CoursesTaught");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Degree", b =>
                {
                    b.Property<int>("DegreeId")
                        .HasColumnType("int")
                        .HasColumnName("DegreeID");

                    b.Property<string>("Degree1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Degree");

                    b.Property<int>("DegreeYear")
                        .HasColumnType("int");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FacultyID");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Specialiation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DegreeId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("DeptID");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("DeptId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .HasColumnType("int")
                        .HasColumnName("DesignationID");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("DesignationId");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FacultyID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("DeptID");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int")
                        .HasColumnName("DesignationID");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PinCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("FacultyId");

                    b.HasIndex("DeptId");

                    b.HasIndex("DesignationId");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Grant", b =>
                {
                    b.Property<int>("GrantId")
                        .HasColumnType("int")
                        .HasColumnName("GrantID");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FacultyID");

                    b.Property<string>("GrantDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GrantTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GrantId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Grants");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Publication", b =>
                {
                    b.Property<int>("PublicationId")
                        .HasColumnType("int")
                        .HasColumnName("PublicationID");

                    b.Property<string>("ArticleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CitationDate")
                        .HasColumnType("date");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FacultyID");

                    b.Property<string>("PublicationLocation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PublicationTiltle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PublicationId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<int>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("DeptID");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SubjectId");

                    b.HasIndex("DeptId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasColumnName("UserType");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.WorkHistory", b =>
                {
                    b.Property<int>("WorkHistoryId")
                        .HasColumnType("int")
                        .HasColumnName("WorkHistoryID");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FacultyID");

                    b.Property<DateTime>("JobBeginDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("JobEndDate")
                        .HasColumnType("date");

                    b.Property<string>("JobResponsibilities")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JobType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Organisation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkHistoryId");

                    b.HasIndex("FacultyId");

                    b.ToTable("WorkHistory");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Course", b =>
                {
                    b.HasOne("FacultyInformationSystem.Models.Department", "Dept")
                        .WithMany("Courses")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_Courses_Courses")
                        .IsRequired();

                    b.Navigation("Dept");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.CourseSubject", b =>
                {
                    b.HasOne("FacultyInformationSystem.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_CourseSubject_Courses")
                        .IsRequired();

                    b.HasOne("FacultyInformationSystem.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CourseSubject_Subjects")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.CoursesTaught", b =>
                {
                    b.HasOne("FacultyInformationSystem.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_CoursesTaught_Courses")
                        .IsRequired();

                    b.HasOne("FacultyInformationSystem.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_CoursesTaught_Faculty")
                        .IsRequired();

                    b.HasOne("FacultyInformationSystem.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_CoursesTaught_Subjects")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Faculty");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Degree", b =>
                {
                    b.HasOne("FacultyInformationSystem.Models.Faculty", "Faculty")
                        .WithMany("Degrees")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_Degrees_Degrees")
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Faculty", b =>
                {
                    b.HasOne("FacultyInformationSystem.Models.Department", "Dept")
                        .WithMany("Faculties")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_Faculty_Department")
                        .IsRequired();

                    b.HasOne("FacultyInformationSystem.Models.Designation", "Designation")
                        .WithMany("Faculties")
                        .HasForeignKey("DesignationId")
                        .HasConstraintName("FK_Faculty_Designation")
                        .IsRequired();

                    b.Navigation("Dept");

                    b.Navigation("Designation");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Grant", b =>
                {
                    b.HasOne("FacultyInformationSystem.Models.Faculty", "Faculty")
                        .WithMany("Grants")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_Grants_Faculty")
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Publication", b =>
                {
                    b.HasOne("FacultyInformationSystem.Models.Faculty", "Faculty")
                        .WithMany("Publications")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_Publications_Publications")
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Subject", b =>
                {
                    b.HasOne("FacultyInformationSystem.Models.Department", "Dept")
                        .WithMany("Subjects")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_Subjects_Department")
                        .IsRequired();

                    b.Navigation("Dept");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.WorkHistory", b =>
                {
                    b.HasOne("FacultyInformationSystem.Models.Faculty", "Faculty")
                        .WithMany("WorkHistories")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_WorkHistory_Faculty")
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Faculties");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Designation", b =>
                {
                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("FacultyInformationSystem.Models.Faculty", b =>
                {
                    b.Navigation("Degrees");

                    b.Navigation("Grants");

                    b.Navigation("Publications");

                    b.Navigation("WorkHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
